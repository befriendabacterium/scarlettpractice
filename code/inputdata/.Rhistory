# START -------------------------------------------------------------------
rm(list=ls())
set.seed(1234)
#install.packages('XML')
library(XML) # HTML processing
#install.packages('RCurl')
library(RCurl)
#install.packages('rvest')
library(rvest)
#install.packages('stringr')
library(stringr)
setwd("~/Jobs/Summer internships/Exeter summer internship 2020/R")
#DOWNLOAD New data set -----------------------------------------------------------
#Extracting the recent csv file.
base.url<-"https://www.google.com/covid19/mobility/"
base.url2<-getURL(base.url)
parsed<-htmlParse(base.url2)
doc.links<-xpathSApply(parsed,path = "//a",xmlGetAttr,"href")
csv.url<- as.character(doc.links[grep('csv', doc.links)])
Google_Mobility_data<-read.csv(csv.url, header = TRUE)
# Making a code for back up -----------------------------------------------
read_text<-read_html(base.url2)
text<-html_text(read_text)
read_date<-str_match(text, "Reports created\\s*(.*?)\\s*.By")
read_date_1<-read_date[2]
Report=paste("Global_Mobility_Report_",read_date_1,sep="")
#Set it up so it saves in correct folder
setwd("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up")
save(Google_Mobility_data,file = paste(Report,".csv",sep=""))
unlink("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current/*")
setwd("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current")
save(Google_Mobility_data,file = paste(Report,".csv",sep=""))
#Set it up so it saves in correct folder
setwd("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up")
save(Google_Mobility_data,file = paste(Report,".csv",sep=""))
unlink("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current/*")
setwd("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current")
save(Google_Mobility_data,file = paste(Report,".csv",sep=""))
# START -------------------------------------------------------------------
rm(list=ls())
set.seed(1234)
#install.packages('XML')
library(XML) # HTML processing
#install.packages('RCurl')
library(RCurl)
#install.packages('rvest')
library(rvest)
#install.packages('stringr')
library(stringr)
#DOWNLOAD New data set -----------------------------------------------------------
#Extracting the recent csv file.
base.url<-"https://www.google.com/covid19/mobility/"
base.url2<-getURL(base.url)
parsed<-htmlParse(base.url2)
doc.links<-xpathSApply(parsed,path = "//a",xmlGetAttr,"href")
csv.url<- as.character(doc.links[grep('csv', doc.links)])
Google_Mobility_data<-read.csv(csv.url, header = TRUE)
# Making a code for back up -----------------------------------------------
read_text<-read_html(base.url2)
text<-html_text(read_text)
read_date<-str_match(text, "Reports created\\s*(.*?)\\s*.By")
read_date_1<-read_date[2]
Report=paste("Global_Mobility_Report_",read_date_1,sep="")
#Set it up so it saves in correct folder
setwd("~/GitHub/parksinthepandemic/code/inputdata/Back up data")
save(Google_Mobility_data,file = paste(Report,".csv",sep=""))
#This deletes files within a folder
#unlink("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current/*")
setwd("~/GitHub/parksinthepandemic/inputdata/code")
#This deletes files within a folder
#unlink("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current/*")
setwd("~/GitHub/parksinthepandemic/inputdata/code")
#This deletes files within a folder
#unlink("~/Jobs/Summer internships/Exeter summer internship 2020/R/Back up/Current/*")
setwd("~/GitHub/parksinthepandemic/code/inputdata")
save(Google_Mobility_data,file = "Current_GlobalMobility")
save(Google_Mobility_data,file = "Current_GlobalMobility.csv")
save(Google_Mobility_data,file = "Current_GlobalMobilityReport.csv")
save(Google_Mobility_data,file = "Current_Global_Mobility_Report.csv")
# START -------------------------------------------------------------------
rm(list=ls())
set.seed(1234)
#install.packages('XML')
library(XML) # HTML processing
#install.packages('RCurl')
library(RCurl)
#install.packages('rvest')
library(rvest)
#install.packages('stringr')
library(stringr)
#DOWNLOAD New data set -----------------------------------------------------------
#Extracting the recent csv file.
base.url<-"https://www.google.com/covid19/mobility/"
base.url2<-getURL(base.url)
parsed<-htmlParse(base.url2)
doc.links<-xpathSApply(parsed,path = "//a",xmlGetAttr,"href")
csv.url<- as.character(doc.links[grep('csv', doc.links)])
Google_Mobility_data<-read.csv(csv.url, header = TRUE)
# Making a code for back up -----------------------------------------------
#Extracting text from the google mobility page.
read_text<-read_html(base.url2)
text<-html_text(read_text)
#Extracting the data via inbetween strings
read_date<-str_match(text, "Reports created\\s*(.*?)\\s*\\.")[2]
#Creating the name of the file using the string function
Report=paste("Global_Mobility_Report_",read_date,sep="")
#Saving the Back up data set
save(Google_Mobility_data,file = paste("inputdata/reports_backup/",Report,".csv",sep=""))
#Saving the Back up data set
save(Google_Mobility_data,file = paste("inputdata/reports_backup/",Report,".csv",sep=""))
#Saving the Back up data set
save(Google_Mobility_data,file = paste("~inputdata/reports_backup/",Report,".csv",sep=""))
#Saving the Back up data set
save(Google_Mobility_data,file = paste("inputdata/reports_backup/",Report,".csv",sep=""))
# Start -------------------------------------------------------------------
rm(list=ls())
set.seed(1234)
# Load packages ----------------------------------------------------------
#install.packages('plotrix')
library(plotrix)
#install.packages('tibble')
library(tibble)
#install.packages('ggplot2')
library(ggplot2)
#install.packages('gridExtra')
library(gridExtra)
#install.packages('grid)
library(grid)
#install.packages('ggplot2)
library(ggplot2)
#install.packages('lattice')
library(lattice)
#install.packages("tidyr")
library(tidyr)
install.packages("tidyr")
library(tidyr)
# Load dataset ------------------------------------------------------------
#getwd()
#Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report_030620.csv")
#Global_Mobility_Report$date<-as.Date(Global_Mobility_Report$date,format = "%d/%m/%y")
Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report.csv")
#DOWNLOAD New data set -----------------------------------------------------------
#Extracting the recent csv file.
base.url<-"https://www.google.com/covid19/mobility/"
base.url2<-getURL(base.url)
parsed<-htmlParse(base.url2)
doc.links<-xpathSApply(parsed,path = "//a",xmlGetAttr,"href")
csv.url<- as.character(doc.links[grep('csv', doc.links)])
Google_Mobility_data<-read.csv(csv.url, header = TRUE)
Google_Mobility_Report<-read.csv(csv.url, header = TRUE)
# Load dataset ------------------------------------------------------------
#getwd()
#Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report_030620.csv")
#Global_Mobility_Report$date<-as.Date(Global_Mobility_Report$date,format = "%d/%m/%y")
#Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report.csv")
Global_Mobility_Report$date<-as.Date(Global_Mobility_Report$date)
Global_Mobility_Report<-read.csv(csv.url, header = TRUE)
# Load dataset ------------------------------------------------------------
#getwd()
#Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report_030620.csv")
#Global_Mobility_Report$date<-as.Date(Global_Mobility_Report$date,format = "%d/%m/%y")
#Global_Mobility_Report<-read.csv("inputdata/Global_Mobility_Report.csv")
Global_Mobility_Report$date<-as.Date(Global_Mobility_Report$date)
Global_Mobility_Report$parks_percent_change_from_baseline<-as.numeric(Global_Mobility_Report$parks_percent_change_from_baseline)
#add sub_country column
Global_Mobility_Report<-Global_Mobility_Report %>% add_column(sub_country = NA, .after = which(colnames(Global_Mobility_Report)=="country_region"))
# Subset the data to only present the UK data, separated by GB cod --------
UK<-subset(Global_Mobility_Report,country_region_code == "GB")
Districts_by_country<-readRDS("inputdata/Districts_by_country.RDS")
Districts_by_country<-readRDS("inputdata/Districts_by_country.RDS")
Districts_by_country<-readRDS("inputdata/Districts_by_country.RDS")
Districts_by_country<-readRDS("inputdata/Districts_by_country.RDS")
Districts_by_country<-readRDS("~inputdata/Districts_by_country.RDS")
